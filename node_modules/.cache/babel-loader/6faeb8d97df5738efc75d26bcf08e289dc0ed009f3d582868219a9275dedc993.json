{"ast":null,"code":"var _jsxFileName = \"D:\\\\givemethisoutfit\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getGeminiResponse = async message => {\n  const lowerCaseMessage = message.toLowerCase();\n  if (lowerCaseMessage.includes('청바지')) {\n    return '청바지에는 흰색 티셔츠나 스트라이프 셔츠가 클래식한 조합이에요. 좀 더 트렌디하게는 크롭탑이나 오버사이즈 맨투맨도 잘 어울려요!';\n  }\n  if (lowerCaseMessage.includes('데이트')) {\n    return '데이트룩으로는 원피스나 블라우스에 스커트 조합을 추천해요. 부드러운 색감의 옷을 선택하면 로맨틱한 분위기를 연출할 수 있어요.';\n  }\n  if (lowerCaseMessage.includes('결혼식')) {\n    return '결혼식 하객룩으로는 너무 튀지 않는 단정한 원피스나 슬랙스에 블라우스 조합이 좋아요. 화이트 색상은 피하는 게 매너랍니다.';\n  }\n  if (lowerCaseMessage.includes('안녕')) {\n    return '안녕하세요! 패션에 대해 궁금한 점이 있으신가요? 오늘의 스타일을 함께 찾아봐요.';\n  }\n  return \"음... 좀 더 자세히 말씀해주시겠어요? 예를 들어 '청바지 코디'나 '데이트룩 추천'처럼 물어보실 수 있어요.\";\n};\nconst ChatbotPage = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: '안녕하세요! 저는 당신의 AI 패션 스타일리스트입니다. 무엇을 도와드릴까요?',\n    sender: 'bot'\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = {\n      text: inputValue,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n    setTimeout(async () => {\n      const botResponseText = await getGeminiResponse(inputValue);\n      const botMessage = {\n        text: botResponseText,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n      setIsLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-list\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-bubble ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble bot typing\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input-form\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatbotPage, \"f/uJG2n/tewYCG/H7DPQQqc17OI=\");\n_c = ChatbotPage;\nexport default ChatbotPage;\nvar _c;\n$RefreshReg$(_c, \"ChatbotPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","getGeminiResponse","message","lowerCaseMessage","toLowerCase","includes","ChatbotPage","_s","messages","setMessages","text","sender","inputValue","setInputValue","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","userMessage","prev","setTimeout","botResponseText","botMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","msg","index","ref","onSubmit","type","value","onChange","target","placeholder","autoFocus","disabled","_c","$RefreshReg$"],"sources":["D:/givemethisoutfit/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chat.css';\r\nimport Header from '../components/Header';\r\n\r\nconst getGeminiResponse = async (message) => {\r\n    const lowerCaseMessage = message.toLowerCase();\r\n    if (lowerCaseMessage.includes('청바지')) {\r\n        return '청바지에는 흰색 티셔츠나 스트라이프 셔츠가 클래식한 조합이에요. 좀 더 트렌디하게는 크롭탑이나 오버사이즈 맨투맨도 잘 어울려요!';\r\n    }\r\n    if (lowerCaseMessage.includes('데이트')) {\r\n        return '데이트룩으로는 원피스나 블라우스에 스커트 조합을 추천해요. 부드러운 색감의 옷을 선택하면 로맨틱한 분위기를 연출할 수 있어요.';\r\n    }\r\n    if (lowerCaseMessage.includes('결혼식')) {\r\n        return '결혼식 하객룩으로는 너무 튀지 않는 단정한 원피스나 슬랙스에 블라우스 조합이 좋아요. 화이트 색상은 피하는 게 매너랍니다.';\r\n    }\r\n    if (lowerCaseMessage.includes('안녕')) {\r\n        return '안녕하세요! 패션에 대해 궁금한 점이 있으신가요? 오늘의 스타일을 함께 찾아봐요.';\r\n    }\r\n    return \"음... 좀 더 자세히 말씀해주시겠어요? 예를 들어 '청바지 코디'나 '데이트룩 추천'처럼 물어보실 수 있어요.\";\r\n};\r\n\r\nconst ChatbotPage = () => {\r\n    const [messages, setMessages] = useState([\r\n        { text: '안녕하세요! 저는 당신의 AI 패션 스타일리스트입니다. 무엇을 도와드릴까요?', sender: 'bot' },\r\n    ]);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!inputValue.trim() || isLoading) return;\r\n\r\n        const userMessage = { text: inputValue, sender: 'user' };\r\n        setMessages((prev) => [...prev, userMessage]);\r\n        setInputValue('');\r\n        setIsLoading(true);\r\n\r\n        setTimeout(async () => {\r\n            const botResponseText = await getGeminiResponse(inputValue);\r\n            const botMessage = { text: botResponseText, sender: 'bot' };\r\n            setMessages((prev) => [...prev, botMessage]);\r\n            setIsLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"chatbot-container\">\r\n                <div className=\"message-list\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`message-bubble ${msg.sender}`}>\r\n                            <p>{msg.text}</p>\r\n                        </div>\r\n                    ))}\r\n                    {isLoading && (\r\n                        <div className=\"message-bubble bot typing\">\r\n                            <div className=\"dot\"></div>\r\n                            <div className=\"dot\"></div>\r\n                            <div className=\"dot\"></div>\r\n                        </div>\r\n                    )}\r\n                    <div ref={messagesEndRef} />\r\n                </div>\r\n                <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange={(e) => setInputValue(e.target.value)}\r\n                        placeholder=\"여기에 메시지를 입력하세요...\"\r\n                        autoFocus\r\n                    />\r\n                    <button type=\"submit\" disabled={isLoading}>\r\n                        전송\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatbotPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}